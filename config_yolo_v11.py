#!/usr/bin/env python3
"""
YOLOv11 Arduino Firebase Bridge - Configuration File
‡πÑ‡∏ü‡∏•‡πå config ‡πÅ‡∏¢‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö

‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:
1. ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô config_yolo_v11_local.py
2. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡πà‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
3. ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å local config ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥

Author: P2P Team
Version: 3.0
"""

import os

class YOLOv11Config:
    """
    ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö YOLOv11 Detection
    """
    
    # ========================================
    # Arduino Communication Settings
    # ========================================
    
    # COM Port Settings
    ARDUINO_PORT = "COM5"  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏≤‡∏° COM port ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
    # ‡∏ß‡∏¥‡∏ò‡∏µ‡∏´‡∏≤ COM port:
    # Windows: Device Manager ‚Üí Ports (COM & LPT)
    # ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: mode ‡πÉ‡∏ô Command Prompt
    
    ARDUINO_BAUD_RATE = 9600
    ARDUINO_TIMEOUT = 1
    SEND_DELAY = 1.0  # ‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏™‡πà‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡πÑ‡∏õ Arduino (‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
    
    # ========================================
    # YOLOv11 Model Settings
    # ========================================
    
    # Model Configuration
    MODEL_PATH = "best.pt"  # path ‡πÑ‡∏õ‡∏¢‡∏±‡∏á YOLOv11 model
    # ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á paths:
    # "best.pt" - custom trained model
    # "yolov8n.pt" - nano model (‡πÄ‡∏£‡πá‡∏ß, ‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏ô‡πâ‡∏≠‡∏¢)
    # "yolov8s.pt" - small model (‡∏™‡∏°‡∏î‡∏∏‡∏•)
    # "yolov8m.pt" - medium model (‡∏ä‡πâ‡∏≤, ‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏°‡∏≤‡∏Å)
    # "models/bottle_detection.pt" - model ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏¢‡πà‡∏≠‡∏¢
    
    TARGET_CLASS_ID = 0  # Class ID ‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏î‡∏û‡∏•‡∏≤‡∏™‡∏ï‡∏¥‡∏Å‡πÉ‡∏ô dataset
    # ‡∏´‡∏≤‡∏Å train ‡πÄ‡∏≠‡∏á ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏ô classes.txt ‡∏´‡∏£‡∏∑‡∏≠ yaml file
    # COCO dataset: 0=person, 39=bottle, 44=cup
    
    CONF_THRESHOLD = 0.80  # Confidence threshold (0.0-1.0)
    # 0.90 = ‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏°‡∏≤‡∏Å, false positive ‡∏ô‡πâ‡∏≠‡∏¢
    # 0.70 = ‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á, ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô
    # 0.50 = ‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏ô‡πâ‡∏≠‡∏¢, ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡πÑ‡∏î‡πâ‡πÄ‡∏¢‡∏≠‡∏∞
    
    # ========================================
    # Camera Settings
    # ========================================
    
    CAM_ID = 1  # Camera index
    # 0 = ‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å (built-in webcam)
    # 1 = ‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏£‡∏≠‡∏á (USB camera)
    # 2, 3, ... = ‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
    
    DEVICE = "cpu"  # Processing device
    # "cpu" = ‡πÉ‡∏ä‡πâ CPU (‡∏ä‡πâ‡∏≤‡∏Å‡∏ß‡πà‡∏≤ ‡πÅ‡∏ï‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á)
    # "cuda" = ‡πÉ‡∏ä‡πâ NVIDIA GPU (‡πÄ‡∏£‡πá‡∏ß‡∏°‡∏≤‡∏Å ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ CUDA)
    # "mps" = ‡πÉ‡∏ä‡πâ Apple Silicon GPU (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Mac M1/M2)
    
    IMG_SIZE = 640  # Input image size
    # 320 = ‡πÄ‡∏£‡πá‡∏ß‡∏°‡∏≤‡∏Å, ‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏ô‡πâ‡∏≠‡∏¢
    # 640 = ‡∏™‡∏°‡∏î‡∏∏‡∏• (‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥)
    # 1280 = ‡∏ä‡πâ‡∏≤, ‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏°‡∏≤‡∏Å
    
    # ========================================
    # Firebase Settings
    # ========================================
    
    FIREBASE_URL = "https://takultoujink-default-rtdb.asia-southeast1.firebasedatabase.app"
    # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô Firebase URL ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
    # ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö: https://your-project-name-default-rtdb.region.firebasedatabase.app
    
    USER_ID = "yolo_v11_user"  # User identifier ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Firebase
    # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡πÄ‡∏ä‡πà‡∏ô "john_doe", "station_01"
    
    # ========================================
    # Display Settings
    # ========================================
    
    WINDOW_NAME = "YOLOv11 P2P Detection (ESC to quit)"
    WINDOW_WIDTH = 1280  # ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á (0 = auto)
    WINDOW_HEIGHT = 720  # ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á (0 = auto)
    
    # UI Colors (BGR format)
    UI_COLOR_PRIMARY = (0, 255, 0)    # ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
    UI_COLOR_SECONDARY = (255, 255, 255)  # ‡∏Ç‡∏≤‡∏ß
    UI_COLOR_WARNING = (0, 165, 255)   # ‡∏™‡πâ‡∏°
    UI_COLOR_ERROR = (0, 0, 255)      # ‡πÅ‡∏î‡∏á
    
    # ========================================
    # Detection Settings
    # ========================================
    
    DETECTION_COOLDOWN = 2.0  # ‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏≠‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏ö‡∏Ç‡∏ß‡∏î (‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
    # 1.0 = ‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á‡πÄ‡∏£‡πá‡∏ß, ‡∏≠‡∏≤‡∏à‡∏ô‡∏±‡∏ö‡∏ã‡πâ‡∏≥
    # 3.0 = ‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á‡∏ä‡πâ‡∏≤, ‡πÑ‡∏°‡πà‡∏ô‡∏±‡∏ö‡∏ã‡πâ‡∏≥
    
    POINTS_PER_BOTTLE = 10  # ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ï‡πà‡∏≠‡∏Ç‡∏ß‡∏î
    
    # Multi-object detection
    COUNT_MULTIPLE_BOTTLES = True  # ‡∏ô‡∏±‡∏ö‡∏Ç‡∏ß‡∏î‡∏´‡∏•‡∏≤‡∏¢‡πÉ‡∏ö‡πÉ‡∏ô‡πÄ‡∏ü‡∏£‡∏°‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
    MAX_BOTTLES_PER_FRAME = 5      # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡∏ß‡∏î‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏ô‡∏±‡∏ö‡πÉ‡∏ô‡πÄ‡∏ü‡∏£‡∏°‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
    
    # ========================================
    # Performance Settings
    # ========================================
    
    # Frame processing
    SKIP_FRAMES = 0  # ‡∏Ç‡πâ‡∏≤‡∏°‡πÄ‡∏ü‡∏£‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß (0 = ‡πÑ‡∏°‡πà‡∏Ç‡πâ‡∏≤‡∏°)
    MAX_FPS = 30     # FPS ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î (0 = ‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î)
    
    # Memory management
    CLEAR_CACHE_INTERVAL = 100  # ‡∏•‡πâ‡∏≤‡∏á cache ‡∏ó‡∏∏‡∏Å‡∏Å‡∏µ‡πà‡πÄ‡∏ü‡∏£‡∏°
    
    # ========================================
    # Logging Settings
    # ========================================
    
    VERBOSE_LOGGING = True   # ‡πÅ‡∏™‡∏î‡∏á log ‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
    LOG_DETECTIONS = True    # log ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö
    LOG_FIREBASE = True      # log ‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á Firebase
    LOG_ARDUINO = True       # log ‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á Arduino
    
    # ========================================
    # Advanced Settings
    # ========================================
    
    # YOLO Advanced
    IOU_THRESHOLD = 0.45     # IoU threshold ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö NMS
    MAX_DETECTIONS = 300     # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô detection ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏ü‡∏£‡∏°
    
    # Firebase Advanced
    FIREBASE_TIMEOUT = 10    # Timeout ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Firebase (‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
    FIREBASE_RETRY_COUNT = 3 # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
    
    # Arduino Advanced
    ARDUINO_RETRY_COUNT = 3  # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏•‡∏≠‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà
    ARDUINO_RESET_DELAY = 2  # ‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏≠‡∏´‡∏•‡∏±‡∏á Arduino reset (‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
    
    # ========================================
    # Experimental Features
    # ========================================
    
    ENABLE_TRACKING = False  # ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ object tracking
    ENABLE_ANALYTICS = False # ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ analytics
    SAVE_DETECTIONS = False  # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡πÑ‡∏î‡πâ
    
    # ========================================
    # Auto-detection Settings
    # ========================================
    
    @classmethod
    def auto_detect_camera(cls):
        """‡∏´‡∏≤ camera ID ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥"""
        import cv2
        for i in range(5):
            cap = cv2.VideoCapture(i)
            if cap.isOpened():
                ret, _ = cap.read()
                cap.release()
                if ret:
                    print(f"üìπ Found working camera at index {i}")
                    return i
        print("‚ùå No working camera found")
        return 0
    
    @classmethod
    def auto_detect_arduino_port(cls):
        """‡∏´‡∏≤ Arduino COM port ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ (Windows)"""
        import serial.tools.list_ports
        
        ports = serial.tools.list_ports.comports()
        for port in ports:
            if 'Arduino' in port.description or 'CH340' in port.description:
                print(f"üîå Found Arduino at {port.device}")
                return port.device
        
        if ports:
            print(f"üîå Using first available port: {ports[0].device}")
            return ports[0].device
        
        print("‚ùå No COM ports found")
        return "COM1"
    
    @classmethod
    def detect_gpu_support(cls):
        """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö GPU"""
        try:
            import torch
            if torch.cuda.is_available():
                print(f"üöÄ CUDA GPU detected: {torch.cuda.get_device_name()}")
                return "cuda"
        except ImportError:
            pass
        
        try:
            import platform
            if platform.system() == "Darwin" and "arm" in platform.machine().lower():
                print("üçé Apple Silicon detected")
                return "mps"
        except:
            pass
        
        print("üíª Using CPU")
        return "cpu"
    
    @classmethod
    def get_optimal_config(cls):
        """‡∏™‡∏£‡πâ‡∏≤‡∏á config ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥"""
        config = cls()
        
        # Auto-detect settings
        config.CAM_ID = cls.auto_detect_camera()
        config.ARDUINO_PORT = cls.auto_detect_arduino_port()
        config.DEVICE = cls.detect_gpu_support()
        
        # Adjust settings based on device
        if config.DEVICE == "cpu":
            config.IMG_SIZE = 416  # ‡∏•‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö CPU
            config.SKIP_FRAMES = 1  # ‡∏Ç‡πâ‡∏≤‡∏°‡πÄ‡∏ü‡∏£‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß
        
        return config

# ========================================
# Local Configuration Override
# ========================================

def load_local_config():
    """
    ‡πÇ‡∏´‡∏•‡∏î config ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå local (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    ‡πÑ‡∏ü‡∏•‡πå local ‡∏à‡∏∞ override ‡∏Ñ‡πà‡∏≤ default
    """
    try:
        from config_yolo_v11_local import YOLOv11LocalConfig
        print("‚úÖ Local configuration loaded")
        return YOLOv11LocalConfig()
    except ImportError:
        print("üí° Using default configuration")
        print("üí° Create 'config_yolo_v11_local.py' to customize settings")
        return YOLOv11Config()

# ========================================
# Configuration Validation
# ========================================

def validate_config(config):
    """
    ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á configuration
    """
    errors = []
    warnings = []
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö model file
    if not os.path.exists(config.MODEL_PATH):
        errors.append(f"Model file not found: {config.MODEL_PATH}")
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö confidence threshold
    if not 0.0 <= config.CONF_THRESHOLD <= 1.0:
        errors.append(f"Invalid confidence threshold: {config.CONF_THRESHOLD}")
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö camera ID
    if config.CAM_ID < 0:
        warnings.append(f"Negative camera ID: {config.CAM_ID}")
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Firebase URL
    if not config.FIREBASE_URL.startswith("https://"):
        warnings.append("Firebase URL should start with https://")
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    if errors:
        print("‚ùå Configuration errors:")
        for error in errors:
            print(f"   - {error}")
        return False
    
    if warnings:
        print("‚ö†Ô∏è  Configuration warnings:")
        for warning in warnings:
            print(f"   - {warning}")
    
    print("‚úÖ Configuration validated")
    return True

# ========================================
# Export for use in main script
# ========================================

if __name__ == "__main__":
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö configuration
    print("üîß Testing YOLOv11 Configuration")
    print("=" * 50)
    
    config = load_local_config()
    
    print(f"Model Path: {config.MODEL_PATH}")
    print(f"Arduino Port: {config.ARDUINO_PORT}")
    print(f"Camera ID: {config.CAM_ID}")
    print(f"Device: {config.DEVICE}")
    print(f"Firebase URL: {config.FIREBASE_URL}")
    
    validate_config(config)
    
    print("\nüí° To customize settings:")
    print("1. Copy this file to 'config_yolo_v11_local.py'")
    print("2. Rename class to 'YOLOv11LocalConfig'")
    print("3. Modify values as needed")